jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "openui5.camera.library-preload",
	"modules": {
		"openui5/camera/Camera.js": "/*\n * A simple UI5 control wrapping the HTML5 media API\n * allowing the library user to easily take Pictures in javascript\n * very easily. The control renders a Video preview element\n * (technically a video html tag). When clicked the image is grabbed\n * as a base64 encoded PNG. In the future would be nice to have the\n * format configurable.\n */\nsap.ui.define([\n    'jquery.sap.global',\n    'sap/ui/core/Control'\n],\n              function(jQuery, Control) {\n                  \"use strict\";\n\n                  /**\n                   * Constructor for a new Camera control.\n                   *\n                   * @param {string} [sId] id for the new control, generated automatically if no id is given\n                   * @param {object} [mSettings] initial settings for the new control\n                   *\n                   * @class\n                   *\n                   * @public\n                   * @alias openui5.camera.Camera\n                   */\n                  var oCamera = Control.extend(\"openui5.camera.Camera\", {\n                      /**\n                       * Control API\n                       */\n                      metadata: {\n                          properties: {\n\n                              /**\n                               * Width of the preview window in pixels\n                               */\n                              \"width\": {\n                                  type: \"string\",\n                                  defaultValue: \"640\"\n                              },\n\n                              /**\n                               * Height of the preview window in pixels\n                               */\n                              \"height\": {\n                                  type: \"string\",\n                                  defaultValue: \"480\"\n                              },\n\n                              /**\n                               * Width of the video capture window in pixels\n                               */\n                              \"videoWidth\": {\n                                  type: \"string\",\n                                  defaultValue: \"1280\"\n                              },\n\n                              /**\n                               * Height of the video capture window in pixels\n                               */\n                              \"videoHeight\": {\n                                  type: \"string\",\n                                  defaultValue: \"960\"\n                              }\n                          },\n                          events: {\n                              /**\n                               * Raised when the user clicks/taps the video preview.\n                               * The event object contain a parameter called \"image\"\n                               * which contains a base64 encoded png file. This is a\n                               * string.\n                               */\n                              \"snapshot\": {}\n                          }\n                      },\n\n                      /**\n                       * Lifecycle hook to initialize the control\n                       */\n                      init: function() {\n                          var that = this;\n                          this._displayingVideo = false; // Is the control displaying video at the moment?\n                      },\n\n\n                      /**\n                       * Handler for when the user clicks the video preview.\n                       * Fires the Snapshot event with the image inside.\n                       **/\n                      _onUserClickedVideo: function() {\n                          var iVideoWidth = parseInt(this.getVideoWidth(), 10);\n                          var iVideoHeight = parseInt(this.getVideoHeight(), 10);\n                          if (this._displayingVideo) {\n                              // Grab the picture from the video element\n                              var oImage = this._takePicture(iVideoWidth, iVideoHeight);\n                              // Send snapshot event with the image inside.\n                              this.fireSnapshot({\n                                  image: oImage\n                              });\n                          }\n                      },\n\n\n                      /**\n                       * Takes a screenshot of the video element and returns its\n                       * data in PNG format.\n                       **/\n                      _takePicture: function(width, height) {\n                          var oCanvas = this._getCanvas();\n                          var oVideo = this._getVideo();\n                          var oImageData = null;\n                          var context = oCanvas.getContext('2d');\n                          if (width && height) {\n                              context.drawImage(oVideo, 0, 0, width, height);\n                              oImageData = oCanvas.toDataURL('image/png');\n                          }\n                          return oImageData;\n                      },\n\n\n                      /**\n                       *\n                       */\n                      _getCanvas: function() {\n                          return jQuery(\"canvas\", jQuery(\"#\" + this.getId())).get(0);\n                      },\n\n\n                      /**\n                       *\n                       */\n                      _getVideo: function() {\n                          return jQuery(\"video\", jQuery(\"#\" + this.getId())).get(0);\n                      },\n\n\n                      /**\n                       *\n                       */\n                      stopCamera: function(){\n                          this._displayingVideo = false;\n                          if (this._stream){\n                              this._stream.getVideoTracks().forEach( function(t){ t.stop(); });\n                          }\n                      },\n\n\n                      /**\n                       *\n                       */\n                      onAfterRendering: function() {\n                          var that = this;\n                          var oVideo = this._getVideo();\n                          // Attach a click handler to the video element\n                          if (oVideo && !oVideo.onclick){\n                              oVideo.onclick = function(){\n                                  that._onUserClickedVideo();\n                              };\n                          }\n                          if (oVideo && !this._displayingVideo) {\n                              // set the camera stream on the canvas.\n                              // Ask the user for camera access.\n                              navigator.mediaDevices.getUserMedia({\n                                  video: { facingMode: \"environment\" }, // Back camera\n                                  audio: false\n                              })\n                                  .then(function(stream) {\n                                      // We have a camera. Let's store the stream for later use\n                                      that._stream = stream;\n                                      oVideo.srcObject = stream;\n                                      oVideo.play();\n                                      that._displayingVideo = true;\n                                  })\n                                  .catch(function(err) {\n                                      jQuery.sap.log.error(\"Problems accessing the camera: \" + err);\n                                  });\n                          }\n                      }\n                  });\n                  return oCamera;\n              });\n",
		"openui5/camera/CameraRenderer.js": "sap.ui.define([],\n\t          function() {\n\t              \"use strict\";\n\n\t              /**\n\t               * @namespace openui5.camera\n\t               */\n\t              var CameraRenderer = {};\n\n\t              /**\n\t               * Renders the HTML for the control, using the provided {@link sap.ui.core.RenderManager}.\n\t               *\n\t               * @param {sap.ui.core.RenderManager} oRm RenderManager object\n\t               * @param {sap.ui.core.Control} oControl An object representation of the control that will be rendered\n\t               */\n\t              CameraRenderer.render = function(oRm, oControl) {\n\t\t              oRm.write(\"<div\");\n\t\t              oRm.writeControlData(oControl);\n\t\t              oRm.writeClasses();\n\t\t              oRm.writeStyles();\n\t\t              oRm.write(\">\");\n                      oRm.write(\"<div style='display: flex; flex-direction: row; align-items: center; justify-content: space-around;'>\");\n                      oRm.write(\n                          \"<video width='%w' height='%h' style='width: %pwpx; height: %phpx;'></video>\"\n                              .replace(\"%w\", oControl.getVideoWidth())\n                              .replace(\"%h\", oControl.getVideoHeight())\n                              .replace(\"%pw\", oControl.getWidth())\n                              .replace(\"%ph\", oControl.getHeight())\n                      );\n                      oRm.write(\n                          \"<canvas width='%w' height='%h' style='display: none; width: %pwpx; height: %phpx;'></canvas>\"\n                              .replace(\"%w\", oControl.getVideoWidth())\n                              .replace(\"%h\", oControl.getVideoHeight())\n                              .replace(\"%pw\", oControl.getWidth())\n                              .replace(\"%ph\", oControl.getHeight()));\n\t\t              oRm.write(\"</div>\");\n\t\t              oRm.write(\"</div>\");\n\t              };\n\n\t              return CameraRenderer;\n\n              }, /* bExport= */ true);\n",
		"openui5/camera/library.js": "/*!\n * ${copyright}\n */\n\n/**\n * Initialization Code and shared classes of library it.designfuture.qrcode.\n */\nsap.ui.define([\n\t'jquery.sap.global',\n\t'sap/ui/core/library' // library dependency\n],  function(jQuery, library) {\n\n\t\"use strict\";\n\n\t/**\n\t * Suite controls library.\n\t *\n\t * @namespace\n\t * @name openui5.camera\n\t * @author Tiago Almeida <jumpifzero@gmail.com>\n\t * @version ${version}\n\t * @public\n\t */\n\n\t// delegate further initialization of this library to the Core\n\tsap.ui.getCore().initLibrary({\n\t\tname : \"openui5.camera\",\n\t\tnoLibraryCSS: true,\n\t\tversion: \"${version}\",\n\t\tdependencies : [\"sap.ui.core\", \"sap.m\"],\n\t\ttypes: [],\n\t\tinterfaces: [],\n\t\tcontrols: [\n\t\t\t\"openui5.camera.Camera\"\n\t\t],\n\t\telements: []\n\t});\n\n\treturn openui5.camera;\n\n}, /* bExport= */ false);\n"
	}
});